<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cs on Ilya Krukowski</title><link>https://bodrovis.tech/tags/cs/</link><description>Recent content in Cs on Ilya Krukowski</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 12 Mar 2024 12:00:00 +0000</lastBuildDate><atom:link href="https://bodrovis.tech/tags/cs/index.xml" rel="self" type="application/rss+xml"/><item><title>Что такое закон Амдала?</title><link>https://bodrovis.tech/posts/zakon_amdala/</link><pubDate>Tue, 12 Mar 2024 12:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/zakon_amdala/</guid><description>В этой статье мы поговорим о законе Амдала (Amdahl&amp;rsquo;s law) и он том, в чём его суть.
Сущность закона Амдала Этот интересный закон был придуман Джином Амдалом несколько десятилетий назад, его время от времени упоминают в контексте информационных систем, так что знать его суть не помешает.
Вообще, смысл данного закона весьма простой: если мы &amp;ldquo;улучшаем&amp;rdquo; (ускоряем) часть некой системы, то общий эффект на быстродействие всей системы будет зависеть от того, насколько этот компонент был важен (то есть какой процент времени работа с ним занимает) и насколько мы его улучшили.</description></item><item><title>Big-endian и little-endian: порядок следования байтов и причём тут Гулливер</title><link>https://bodrovis.tech/posts/big_endian_i_little_endian_poryadok_sledovaniya_baytov/</link><pubDate>Mon, 11 Mar 2024 12:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/big_endian_i_little_endian_poryadok_sledovaniya_baytov/</guid><description>В этой статье мы поговорим о понятиях big-endian и little-endian в computer science.
Эта запись также доступна в канале Telegram &amp;ldquo;DEV: Рубиновые тона&amp;rdquo;, а обсудить же эту тему можно в нашем чате Telegram.
Дом, который построил Свифт Частенько в руководствах и документации можно встретить термины big-endian и little-endian — да хотя бы в статье про кодировки UTF8 и ASCII. Но что эти понятия вообще значат? На самом деле, всё довольно просто: это буквально война тупоконечников и остроконечников (я серьёзно).</description></item><item><title>Что такое Unicode, UTF-8 и ASCII?</title><link>https://bodrovis.tech/posts/chto_takoe_unicode_utf8_i_ascii/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/chto_takoe_unicode_utf8_i_ascii/</guid><description>В этой статье мы поговорим о том, как кодируется текст в современных компьютерах, а также о таких понятиях, как Unicode, UTF-8 и ASCII (и не только).
Это запись по следам видеоурока, который можно найти на YouTube:
Эта запись также доступна в канале Telegram &amp;ldquo;DEV: Рубиновые тона&amp;rdquo;, а обсудить же эту тему можно в нашем чате Telegram. Статья написана с использованием руководства Джоэля Спольского.
Зачем нужны кодировки? Люди говорят, думают и пишут на естественных языках, многие из которых развивались на протяжении столетий.</description></item><item><title>Как в компьютере представлены дробные числа?</title><link>https://bodrovis.tech/posts/kak-v-computere-predstavleny-drobnyye-chisla/</link><pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/kak-v-computere-predstavleny-drobnyye-chisla/</guid><description>В этой статье мы поговорим о дробных числах (float) и их представлении в компьютере, в частности, о том, как их описывает стандарт IEEE 754, принятый в 1985 году. Если вас интересует представление целых чисел, об этом можно почитать в предыдущей статье.
Это запись по следам видеоурока, который можно найти на YouTube:
Эта запись также доступна в канале Telegram &amp;ldquo;DEV: Рубиновые тона&amp;rdquo;, а обсудить же эту тему можно в нашем чате Telegram.</description></item><item><title>Как в компьютере представлены целые числа?</title><link>https://bodrovis.tech/posts/kak-v-computere-predstavleny-celye-chisla/</link><pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/kak-v-computere-predstavleny-celye-chisla/</guid><description>Как целые числа представлены в современных компьютерах? Это немаловажный вопрос, ответ на который состоит из нескольких частей. Дело в том, что у нас есть обычные неотрицательные целые числа (uint), которые представляют собой последовательность от 0 и далее до бесконечности, и просто целые числа (int), которые могут быть и отрицательными, и положительными. Есть ещё числа дробные, но про них речь пойдёт в следующей статье.
Это запись по следам видеоурока, который можно найти на YouTube:</description></item></channel></rss>