<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cs on Ilya Krukowski</title><link>https://bodrovis.tech/tags/cs/</link><description>Recent content in Cs on Ilya Krukowski</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 12 Mar 2024 12:00:00 +0000</lastBuildDate><atom:link href="https://bodrovis.tech/tags/cs/index.xml" rel="self" type="application/rss+xml"/><item><title>Что такое закон Амдала?</title><link>https://bodrovis.tech/posts/zakon_amdala/</link><pubDate>Tue, 12 Mar 2024 12:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/zakon_amdala/</guid><description>&lt;p>В этой статье мы поговорим о &lt;strong>законе Амдала (Amdahl&amp;rsquo;s law)&lt;/strong> и он том, в чём его суть.&lt;/p>
&lt;h2 id="сущность-закона-амдала">Сущность закона Амдала&lt;/h2>
&lt;p>Этот интересный закон был придуман Джином Амдалом несколько десятилетий назад, его время от времени упоминают в контексте информационных систем, так что знать его суть не помешает.&lt;/p>
&lt;p>Вообще, смысл данного закона весьма простой: если мы &amp;ldquo;улучшаем&amp;rdquo; (ускоряем) &lt;strong>часть&lt;/strong> некой системы, то общий эффект на быстродействие &lt;strong>всей&lt;/strong> системы будет зависеть от того, насколько этот компонент был важен (то есть какой процент времени работа с ним занимает) и насколько мы его улучшили. Звучит как пассаж от капитана Очевидность, но для оценки есть конкретная формула.&lt;/p></description></item><item><title>Big-endian и little-endian: порядок следования байтов и причём тут Гулливер</title><link>https://bodrovis.tech/posts/big_endian_i_little_endian_poryadok_sledovaniya_baytov/</link><pubDate>Mon, 11 Mar 2024 12:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/big_endian_i_little_endian_poryadok_sledovaniya_baytov/</guid><description>&lt;p>В этой статье мы поговорим о понятиях &lt;strong>big-endian и little-endian&lt;/strong> в computer science.&lt;/p>
&lt;p>&lt;em>Эта запись также доступна &lt;a href="https://t.me/dev_in_ruby_colors/963">в канале Telegram &amp;ldquo;DEV: Рубиновые тона&amp;rdquo;&lt;/a>, а обсудить же эту тему можно &lt;a href="https://t.me/+MxYT6-01eeA1NTYy">в нашем чате Telegram&lt;/a>.&lt;/em>&lt;/p>
&lt;h2 id="дом-который-построил-свифт">Дом, который построил Свифт&lt;/h2>
&lt;p>Частенько в руководствах и документации можно встретить термины big-endian и little-endian — да хотя бы в &lt;a href="https://bodrovis.tech/posts/chto_takoe_unicode_utf8_i_ascii/">статье про кодировки UTF8 и ASCII&lt;/a>. Но что эти понятия вообще значат? На самом деле, всё довольно просто: это буквально война тупоконечников и остроконечников (я серьёзно).&lt;/p></description></item><item><title>Что такое Unicode, UTF-8 и ASCII?</title><link>https://bodrovis.tech/posts/chto_takoe_unicode_utf8_i_ascii/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/chto_takoe_unicode_utf8_i_ascii/</guid><description>&lt;p>В этой статье мы поговорим о том, как кодируется текст в современных компьютерах, а также о таких понятиях, как &lt;strong>Unicode, UTF-8 и ASCII&lt;/strong> (и не только).&lt;/p>
&lt;p>Это запись по следам видеоурока, который можно найти на YouTube:&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/E5uQeik0tdc"
 title="YouTube video player" frameborder="0"
 allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
 allowfullscreen>&lt;/iframe>
&lt;p>&lt;em>Эта запись также доступна &lt;a href="https://t.me/dev_in_ruby_colors/953">в канале Telegram &amp;ldquo;DEV: Рубиновые тона&amp;rdquo;&lt;/a>, а обсудить же эту тему можно &lt;a href="https://t.me/+MxYT6-01eeA1NTYy">в нашем чате Telegram&lt;/a>. Статья написана с использованием руководства &lt;a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/">Джоэля Спольского&lt;/a>.&lt;/em>&lt;/p>
&lt;h2 id="зачем-нужны-кодировки">Зачем нужны кодировки?&lt;/h2>
&lt;p>Люди говорят, думают и пишут на естественных языках, многие из которых развивались на протяжении столетий. Конечно, и в мире IT мы хотели бы работать с текстовой информацией в привычном виде, но проблема заключается в том, что современные компьютеры понимают только нолики и единички: да - нет, правда - ложь, есть сигнал - нет сигнала. Впрочем, зачастую и людям тоже проще мыслить категориями &amp;ldquo;плохо - хорошо&amp;rdquo;, а не разбираться в &amp;ldquo;градациях серого&amp;rdquo; некоего явления (о том, к чему это иногда приводит, я здесь рассуждать не буду). Так или иначе, наши тексты нужно каким-то образом хранить в цифровом виде, и сегодня мы попробуем понять, какие для этого используются подходы.&lt;/p></description></item><item><title>Как в компьютере представлены дробные числа?</title><link>https://bodrovis.tech/posts/kak-v-computere-predstavleny-drobnyye-chisla/</link><pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/kak-v-computere-predstavleny-drobnyye-chisla/</guid><description>&lt;p>В этой статье мы поговорим о &lt;strong>дробных числах (float) и их представлении в компьютере&lt;/strong>, в частности, о том, как их описывает стандарт &lt;strong>IEEE 754&lt;/strong>, принятый в 1985 году. Если вас интересует представление целых чисел, об этом можно почитать &lt;a href="https://bodrovis.tech/posts/kak-v-computere-predstavleny-celye-chisla/">в предыдущей статье&lt;/a>.&lt;/p>
&lt;p>Это запись по следам видеоурока, который можно найти на YouTube:&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Pe3GCa3WKBU"
 title="YouTube video player" frameborder="0"
 allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
 allowfullscreen>&lt;/iframe>
&lt;p>&lt;em>Эта запись также доступна &lt;a href="https://t.me/dev_in_ruby_colors/970">в канале Telegram &amp;ldquo;DEV: Рубиновые тона&amp;rdquo;&lt;/a>, а обсудить же эту тему можно &lt;a href="https://t.me/+MxYT6-01eeA1NTYy">в нашем чате Telegram&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>Как в компьютере представлены целые числа?</title><link>https://bodrovis.tech/posts/kak-v-computere-predstavleny-celye-chisla/</link><pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate><guid>https://bodrovis.tech/posts/kak-v-computere-predstavleny-celye-chisla/</guid><description>&lt;p>&lt;strong>Как целые числа представлены в современных компьютерах?&lt;/strong> Это немаловажный вопрос, ответ на который состоит из нескольких частей. Дело в том, что у нас есть обычные &lt;strong>неотрицательные целые числа (uint)&lt;/strong>, которые представляют собой последовательность от 0 и далее до бесконечности, и просто &lt;strong>целые числа (int)&lt;/strong>, которые могут быть и отрицательными, и положительными. Есть ещё числа дробные, но про них речь пойдёт &lt;a href="https://bodrovis.tech/posts/kak-v-computere-predstavleny-drobnyye-chisla/">в следующей статье&lt;/a>.&lt;/p>
&lt;p>Это запись по следам видеоурока, который можно найти на YouTube:&lt;/p></description></item></channel></rss>